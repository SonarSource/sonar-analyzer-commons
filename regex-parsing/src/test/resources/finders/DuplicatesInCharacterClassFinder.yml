- 'features': ALL
- '[0-99]' # Noncompliant {{Remove duplicates in this character class.}}
#   ^^^^
- '[90-9]' # Noncompliant
- '[0-73-9]' # Noncompliant
- '[0-93-57]' # Noncompliant
- '[4-92-68]' # Noncompliant
- '[0-33-9]' # Noncompliant
- '[0-70-9]' # Noncompliant
- '[3-90-7]' # Noncompliant
- '[3-50-9]' # Noncompliant
- '[xxx]' # Noncompliant
- '[A-z_]' # Noncompliant
- '(?i)[A-Za-z]' # Noncompliant
- '(?i)[A-_d]' # Noncompliant
- '(?iu)[Ã„-ÃœÃ¤]' # Noncompliant
- '(?iu)[a-Ã–Ã¶]' # Noncompliant
- '[  ]' # Noncompliant
- '(?i)[  ]' # Noncompliant
- '(?iu)[  ]' # Noncompliant
- '(?i)[A-_D]' # Noncompliant
- '(?iu)[A-_D]' # Noncompliant
- '(?i)[xX]' # Noncompliant
- '(?iu)[Ã¤Ã„]' # Noncompliant
- '(?iU)[Ã¤Ã„]' # Noncompliant
- '(?iu)[xX]' # Noncompliant
- '[\"\".]' # Noncompliant
- '[\\x{F600}-\\x{F637}\\x{F608}]' # Noncompliant
- '[\Qxx\E]' # Noncompliant
- '[[a][a]]' # Noncompliant
- '[[abc][b]]' # Noncompliant
- '[[^a]b]' # Noncompliant
- '[[^a]z]' # Noncompliant
- '[a[^z]]' # Noncompliant
- '[z[^a]]' # Noncompliant
- '[\s\Sx]' # Noncompliant
- '(?U)[\s\Sx]' # Noncompliant
- '[\w\d]' # Noncompliant
- '[\wa]' # Noncompliant
- '[\d1]' # Noncompliant
- '[\d1-3]' # Noncompliant
- '(?U)[\wa]' # Noncompliant
- '[A-Za-z]': 'i' # Noncompliant
- '[0-9\d]' # Noncompliant
- '[0-9\\d]' # Noncompliant
- '[0-9\\\\\d]' # Noncompliant
- '(?(?=1)[0-99])' # Noncompliant
- '(?(?=1)1|[0-99])' # Noncompliant
#            ^^^^

- 'a-z\d'
- '[0-9][0-9]?'
- '[xX]'
- '[\s\S]'
- '[[^\s\S]x]'
- '(?U)[\s\S]'
- '(?U)[\S\u0085\u2028\u2029]'
- '[\d\D]'
- '(?U)[\d\D]'
- '[\w\W]'
- '(?U)[\w\W]'
- '[\wÃ¤]'
- '(?i)[Ã¤Ã„]'
- '(?i)[Ã„-ÃœÃ¤]'
- '(?u)[Ã¤Ã„]'
- '(?u)[xX]'
- '[ab-z]'
- '[[a][b]]'
- '[[^a]a]'
- '[Z-ax]'
- '(?i)[a-Ã–Ã¶]'
- '[0-9\Q.-_\E]' # This used to falsely interpret .-_ as a range and complain that it overlaps with 0-9
- '[A-Z\Q-_.\E]'
- '[\x00\x01]]' # This used to falsely complain about x and 0 being duplicates
- '[\x00-\x01\x02-\x03]]'
- '[z-a9-0]' # Illegal character class should not make the check explode
- '[aa' # Check should not run on syntactically invalid regexen
- '(?U)[\wÃ¤]' # False negative because we don't support Unicode characters in \w and \W
- '(?U)[[^\W]a]' # False negative because once we negate a character class whose contents we don't
  # fully understand, we ignore it to avoid false positives
- '[[a-z&&b-e]c]' # FN because we don't support intersections
- '(?i)[A-_d-{]' # FN because we ignore case insensitivity unless both ends of the ranges are letters
- '(?i)[A-z_]' # FN because A-z gets misinterpreted as A-Za-z due to the way we handle case insensitivity
- '[\p{Armenian}x]' # FN because we don't support \p at the moment
- '[\\\\abc]'
- '[\s"\:\{\}\[\],&\*\#\?]'
- '[0-9\\\d]' # Compliant
- '[[:alnum:]alnum]'

- '[ðŸ˜‚ðŸ˜Š]'
- '[^\ud800\udc00-\udbff\udfff]'

- 'features' : ALL | ^NESTED_CHARTER_CLASS
- '[[[]'  # Noncompliant
